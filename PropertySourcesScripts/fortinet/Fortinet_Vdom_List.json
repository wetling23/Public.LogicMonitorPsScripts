{
    "scheduleOption": 0,
    "dataType": 0,
    "description": "SSH into Fortinet device and query for configured VDOMs.",
    "appliesTo": "hasCategory(\"Fortigate\") && (ssh.user && ssh.pass)",
    "technology": "",
    "type": "propertyrule",
    "params": [
        {
            "name": "linuxcmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "linuxscript",
            "comment": "",
            "value": ""
        },
        {
            "name": "scriptgroovy",
            "comment": "",
            "value": "/*******************************************************************************\r\nNotes\r\n    V1.0.0.0 date: 12 August 2021\r\n        - Initial release\r\n        - Based on input from Stuart Weenig and Michael Rodrigues (https://communities.logicmonitor.com/topic/7308-trouble-with-fortigate-propertysource-script/)\r\n    V1.0.0.1 date: 18 August 2021\r\nLink\r\n    https://github.com/wetling23/Public.LogicMonitorPsScripts/tree/master/PropertySourcesScripts/fortinet\r\n******************************************************************************/\r\n\r\nimport com.santaba.agent.groovyapi.expect.Expect\r\n\r\nhostname = hostProps.get(\"system.hostname\")\r\nuserid = hostProps.get(\"ssh.user\")\r\npasswd = hostProps.get(\"ssh.pass\")\r\ndef list = new ArrayList()\r\n\r\ntry {\r\n    try {\r\n        ssh_connection = Expect.open(hostname, userid, passwd)\r\n    }\r\n    catch (all) {\r\n        println \"Failed to connect to ${hostname} as ${userid}. Error: ${all.getMessage()}\"\r\n\r\n        return 1\r\n    }\r\n\r\n    //println \"Running 'config vdom' command.\"\r\n    try {\r\n        ssh_connection.expect(\"# \")\r\n        ssh_connection.send(\"config vdom\\n\")\r\n        ssh_connection.expect(\"# \")\r\n    }\r\n    catch (all) {\r\n        println \"Failed to enter vdom config. Error: ${all.getMessage()}\"\r\n\r\n        return 1\r\n    }\r\n\r\n    //println \"Collecting the output of 'config vdom'.\"\r\n    try {\r\n        cmd_output = ssh_connection.before()\r\n    }\r\n    catch (all) {\r\n        println \"Failed to collect output. Error: ${all.getMessage()}\"\r\n\r\n        return 1\r\n    }\r\n\r\n    try {\r\n        if (cmd_output =~ /\\(vdom\\)/) {\r\n            //println \"Successfully entered vdom config, running the 'edit' command.\"\r\n            ssh_connection.send(\"edit ?\\n\")\r\n            ssh_connection.expect(\"# \")\r\n        }\r\n    }\r\n    catch (all) {\r\n        println \"Unexpected error running 'edit'. Error: ${all.getMessage()}\"\r\n\r\n        return 1\r\n    }\r\n\r\n    //println \"Collecting the output of 'edit'.\"\r\n    try {\r\n        cmd_output2 = ssh_connection.before()\r\n    }\r\n    catch (all) {\r\n        println \"Failed to collect output. Error: ${all.getMessage()}\"\r\n\r\n        return 1\r\n    }\r\n\r\n    //println \"Attempting to parse the list of VDOMs.\"\r\n    try {\r\n        if (cmd_output2.contains(\"Command fail\") || cmd_output2.contains(\"error\")) {\r\n            println \"fortinet.vdomlist=\"\r\n\r\n            //println \"No VDOMs in the list variable.\"\r\n\r\n            //ssh_connection.expectClose()\r\n\r\n            return 0\r\n        }\r\n        else {\r\n            cmd_output2.eachLine { line ->\r\n                if (!(line =~ /\\<vdom\\>/) && !(line =~ /^\\s*$/) && !(line =~ \"edit\") && !(line =~ /\\(vdom\\)/) && !(line =~ /config vdom/)) {\r\n                    //println \"Adding '${line}' to the list of configured VDOMs.\"\r\n                    list.add(line)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (all) {\r\n        println \"Unexpected error parsing the list of VDOMs. Error: ${all.getMessage()}\"\r\n\r\n        return 1\r\n    }\r\n\r\n    //println \"Exiting VDOM config.\"\r\n    try {\r\n        ssh_connection.send(\"\\025\")\r\n        ssh_connection.send(\"abort\\n\")\r\n    }\r\n    catch (all) {\r\n        println \"Unexpected error exiting VDOM config. Error: ${all.getMessage()}\"\r\n\r\n        return 1\r\n    }\r\n\r\n    if (list) {\r\n        //println \"Returning vdoms:\"\r\n        println \"fortinet.vdomlist=${list.join(\",\")}\"\r\n    }\r\n    else {\r\n        println \"No VDOMs in the list variable.\"\r\n    }\r\n\r\n    return 0\r\n}\r\ncatch (Exception e) {println e;return 1}\r\nfinally {if (ssh_connection){ssh_connection.expectClose()}}"
        },
        {
            "name": "scripttype",
            "comment": "embed",
            "value": "embed"
        },
        {
            "name": "windowscmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "windowsscript",
            "comment": "",
            "value": ""
        }
    ],
    "version": 1629313107,
    "tags": "",
    "auditVersion": 0,
    "name": "Fortinet_Vdom_List",
    "id": 244,
    "group": "Fortinet FortiGate"
}